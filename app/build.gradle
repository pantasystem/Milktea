plugins {
    id('com.android.application')
    id('kotlin-android')
    id('kotlin-kapt')
    id('org.jetbrains.kotlin.plugin.serialization')
    id('com.google.gms.google-services')
    id('com.google.android.gms.oss-licenses-plugin')
    id('dagger.hilt.android.plugin')
    id('com.github.triplet.play')
    id('com.google.firebase.crashlytics')
}


play {
    track = "internal"
    enabled = (System.getenv("ANDROID_PUBLISHER_CREDENTIALS") != null)
}

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "jp.panta.misskeyandroidclient"
        minSdkVersion 21
        targetSdkVersion 33
        multiDexEnabled true
        versionCode VERSION_CODE as int
        versionName VERSION_NAME
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        // プッシュ通知関連のデータをlocal.propertiesからBuildConfigへ書き込んでいます。
        def properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def PUSH_TO_FCM_SERVER_BASE_URL = properties.getProperty('push_to_fcm.server_base_url')
        def PUSH_TO_FCM_PUBLIC_KEY = properties.getProperty('push_to_fcm.public_key')
        def PUSH_TO_FCM_AUTH = properties.getProperty('push_to_fcm.auth')
        buildConfigField('String', 'PUSH_TO_FCM_SERVER_BASE_URL', "\"${PUSH_TO_FCM_SERVER_BASE_URL}\"")
        buildConfigField('String', 'PUSH_TO_FCM_PUBLIC_KEY', "\"${PUSH_TO_FCM_PUBLIC_KEY}\"")
        buildConfigField('String', 'PUSH_TO_FCM_AUTH', "\"${PUSH_TO_FCM_AUTH}\"")

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        compose true
        dataBinding true
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }


    composeOptions {
        kotlinCompilerExtensionVersion = compose_version
    }

}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':data')
    implementation project(path: ':common')
    implementation project(path: ':model')
    implementation project(path: ':api')
    implementation project(path: ':app_store')
    implementation project(path: ':features:auth')
    implementation project(path: ':features:channel')
    implementation project(path: ':features:drive')
    implementation project(path: ':features:media')
    implementation project(path: ':common_compose')
    implementation project(path: ':common_compose')
    implementation project(path: ':features:messaging')
    implementation project(path: ':common_navigation')
    implementation project(path: ':common_viewmodel')
    implementation project(path: ':features:gallery')
    implementation project(path: ':api_streaming')
    implementation project(path: ':features:group')
    testImplementation project(path: ':api_streaming')
    implementation project(path: ':common_android')

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.0'

    //noinspection GradleCompatible
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation libs.appcompat.appcompat

    implementation libs.bundles.emoji2


    // NOTE: リアクションピッカーなどでリフレクションを行っているのでバージョンを変更しないこと
    implementation libs.android.material.material
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'androidx.preference:preference-ktx:1.2.0'
    //noinspection GradleDynamicVersion
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'


    // Required for instrumented tests
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'



    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"


    implementation libs.lifecycle.extenstions
    implementation libs.lifecycle.viewmodel


    //Kotlin coroutines用ライブラリ(async, await)
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'


    //glide
    //implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation libs.glide.glide
    kapt libs.glide.compiler
    implementation libs.accompanist.glide
    implementation libs.animation.apng



    //CardView
    //implementation "com.android.support:cardview-v7:28.0.0"
    implementation 'androidx.cardview:cardview:1.0.0'

    //svg
    implementation 'com.caverock:androidsvg-aar:1.4'


    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.18'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

    // Swipe refresh
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01"

    // ViewPager2
    implementation "androidx.viewpager2:viewpager2:1.1.0-beta01"

    implementation 'org.jsoup:jsoup:1.14.3'


    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"

    implementation libs.wada811.databinding

    implementation libs.fragment.ktx
    implementation platform('com.google.firebase:firebase-bom:28.1.0')
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'

    implementation libs.androidx.core.ktx

    def work_version = "2.7.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation libs.kotlin.datetime

    implementation libs.lifecycle.livedata

    // compose
    implementation libs.bundles.compose.ui
    implementation libs.bundles.compose.foundation
    implementation libs.bundles.compose.material
    androidTestImplementation libs.compose.ui.ui.test.junit4
    implementation libs.compose.runtime.runtime.livedata
    implementation libs.android.material.compose.theme.adapter
    implementation libs.accompanist.swiperefresh
    implementation libs.activity.compose
    implementation libs.accompanist.pager
    implementation libs.accompanist.pager.indicators
    implementation libs.coil.compose
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

    // hilt
    implementation libs.hilt.android
    kapt libs.hilt.compiler
    androidTestImplementation  libs.hilt.android.testing
    kaptAndroidTest libs.hilt.compiler
    testImplementation libs.hilt.android.testing
    kaptTest libs.hilt.compiler

    implementation("com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0")


    def nav_version = "2.5.0"

    // Java language implementation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:$nav_version"

//    implementation libs.activity.ktx
    implementation libs.activity.ktx
}

kapt {
    correctErrorTypes true
}