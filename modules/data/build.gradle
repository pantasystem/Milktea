plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
    id 'io.objectbox'
}

android {
    compileSdk 34

    defaultConfig {
        minSdk 21
        targetSdk 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        sourceSets {
            debug.assets.srcDirs += files("$projectDir/schemas".toString())
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"

    }
    // for junit5
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
    namespace 'net.pantasystem.milktea.data'
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.appcompat.appcompat
    implementation libs.android.material.material
    implementation project(path: ':modules:common')
    implementation project(path: ':modules:api')
    implementation project(path: ':modules:model')
    implementation project(path: ':modules:app_store')
    implementation project(path: ':modules:api_streaming')
    implementation project(path: ':modules:common_android')
    testImplementation libs.junit
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.androidx.test.espresso.core


    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // hilt
    implementation libs.hilt.android
    kapt libs.hilt.compiler

    // For instrumentation tests
    androidTestImplementation  libs.hilt.android.testing
    kaptAndroidTest libs.hilt.compiler

    // For local unit tests
    testImplementation libs.hilt.android.testing
    kaptTest libs.hilt.compiler
    implementation libs.kotlin.datetime

    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation("com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:1.0.0")

    implementation libs.kotlin.serialization

    //Kotlin coroutines用ライブラリ(async, await)
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    implementation libs.okhttp3.logging.inspector


    implementation "androidx.datastore:datastore-preferences:1.0.0"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation platform('com.google.firebase:firebase-bom:31.2.0')
    implementation 'com.google.firebase:firebase-messaging'
    testImplementation "org.mockito.kotlin:mockito-kotlin:5.2.1"

    androidTestImplementation "androidx.room:room-testing:$room_version"

    testImplementation libs.junit.jupiter.api
    testRuntimeOnly libs.junit.jupiter.engine
    implementation "androidx.exifinterface:exifinterface:1.3.6"
    implementation libs.objectbox.kotlin

}

kapt {
    correctErrorTypes true
}